mem address 0 i32 0 . 
mem address 1 i32 1 . 
mem address 2 i32 0 . 
mem address 3 i32 10 .

mem address 3 ,! i 0 == if
    mem address 0 , print
else
    i 2 while dup mem address 3 ,! > do
        mem address 0 , // read a
        mem address 1 , // read b
        dup
        mem address 4 swap . // backup b
        +
        dup // produce c
        dup dump
        mem address 2 swap . // c = a + b
        mem address 4 , // b backed up
        mem address 0 swap . // a = b
        mem address 1 swap . // b = c
        i 1 +
    end
end
s "The " mem address 3 , call to_string + s "th fibonacci number is " + mem address 1 , call to_string + print